using DotPrep.DSA.DP;
using Xunit;

namespace DotPrep.DSATest.DP
{
    public class Knapsack01Test
    {
        Knapsack01 _knapsack01;

        public Knapsack01Test()
        {
            _knapsack01 = new Knapsack01();
        }

        [Fact]
        public void Test1()
        {
            var weights = new int[] { 10, 4, 11, 14, 14, 6, 4, 11, 3, 7, 8, 2, 8, 10, 2, 2, 8, 3, 3, 12, 13, 2, 10, 15, 15, 9, 4, 1, 9, 15, 10, 13, 4, 3, 11, 9, 4, 1, 8, 5, 5, 14, 4, 15, 14, 13, 2, 2, 2, 5, 5, 3, 1, 13, 6, 10, 13, 1, 12, 5, 1, 14, 5, 12, 1, 14, 9, 15, 1, 9, 12, 5, 15, 3 };
            var values = new int[] { 9221, 2916, 26295, 22343, 20095, 2557, 7208, 1977, 13628, 13035, 16403, 16709, 26525, 14961, 17602, 502, 21741, 16012, 24709, 22097, 21102, 20939, 8414, 26125, 28501, 2437, 7470, 27605, 24864, 2132, 20121, 23944, 2738, 31477, 24663, 26317, 7399, 31100, 30818, 3440, 24457, 29188, 13468, 11374, 16893, 27423, 3820, 12041, 27510, 15503, 2580, 5466, 3198, 10347, 10193, 8554, 21292, 27825, 7544, 14464, 29203, 15148, 14972, 24138, 32082, 10511, 1473, 14958, 5718, 15296, 31781, 13962, 24095, 11446 };
            var capacity = 100;
            var expected = 565753;
            var acutual = _knapsack01.Solve(weights, values, capacity);
            Assert.Equal(expected, acutual);
        }
    }
}
